<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core"#>
<#@ assembly name="EnvDTE"#>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="..\..\T4 Tools\MultipleOutputHelper.ttinclude"#>
<#@ output extension="/" #>
<#
    var manager = Manager.Create(Host, GenerationEnvironment);
    var types = new[] { "int", "float" };
    var names = new[] { string.Empty, "F" };

    for (int i = 0; i < types.Length; ++i)
    {
        var typeName = types[i];
        var fileName = string.Format("Size{0}", names[i]);
        var className= fileName;
        manager.StartNewFile(string.Format("{0}.cs", fileName));
#>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a T4 template.
//
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace <#=string.Format("{0}{1}{2}", manager.DefaultProjectNamespace,
    string.IsNullOrEmpty(manager.GetCustomToolNamespace(Host.TemplateFile)) ?
        string.Empty : ".", manager.GetCustomToolNamespace(Host.TemplateFile))#>
{
    public struct <#=className#>
    {
        public <#=typeName#> Width;
        public <#=typeName#> Height;

        public <#=className#>(<#=typeName#> width, <#=typeName#> height)
        {
            Width = width;
            Height = height;
        }
    }
}
<#
    }
    manager.Process(true);
#>